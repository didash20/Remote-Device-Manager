<form name="signup" id="signup">
  <div style="width: 70%; margin: auto;">
    <h1>Sign Up New User</h1>
    <hr>

    <label for="uname"><b>Username <span class="uname w3-small" style="color: red">*</span></b></label>
    <input type="text" placeholder="Enter Username" name="uname" pattern="^[A-za-z][A-za-z0-9_-]{4,32}$" required
    title="Username must be alphanumerical, start with a letter and be between 5-32 characters">

    <label for="email"><b>Email <span class="email w3-small" style="color: red">*</span></b></label>
    <input type="email" placeholder="Enter Email" name="email" title="Fill this field">
    
    <table style="width: 100%;">
      <tr>
        <td style="width: 48%;">
          <label for="fname"><b>First Name <span class="fname w3-small" style="color: red">*</span></b></label>
          <input type="text" placeholder="Enter your First Name" name="fname">
        </td>
        <td style="width: 2%;"></td>
        <td style="width: 48%;">
          <label for="lname"><b>Last Name <span class="lname w3-small" style="color: red">*</span></b></label>
          <input type="text" placeholder="Enter your Last Name" name="lname">
        </td>
      </tr>
      <tr>
        <td style="width: 48%;">
          <label for="institution"><b>Institution <span class="institution w3-small" style="color: red"></span></b></label>
          <input type="text" placeholder="Enter your Institution" name="institution" title="Fill this field">
        </td>
        <td style="width: 2%;"></td>
        <td style="width: 48%;">
          <label for="region"><b>Region <span class="region w3-small" style="color: red">*</span></b></label>
          <select name="region" id="region" title="Select a region" required>
            <option value="" selected disabled>Select a Region</option>
            <option value="Africa">Africa</option>
            <option value="Asia-Pacific">Asia-Pacific</option>
            <option value="Europe">Europe</option>
            <option value="Latin America">Latin America and Caribbean</option>
            <option value="Middle East">Middle East</option>
            <option value="North America">North America</option>
          </select>
        </td>
      </tr>
    </table>

    <label for="roles"><b>Roles <span class="roles w3-small" style="color: red">*</span></b></label>
    <table class="w3-large" style="width: 50%; text-align: center;">
      <td>
        <input type="checkbox" name="roles[]" value="user">
        <label class="check-container">User</label>
      </td>
      <td>
        <input type="checkbox" name="roles[]" value="moderator">
        <label class="check-container">Moderator</label>
      </td>
      <td>
        <input type="checkbox" name="roles[]" value="admin">
        <label class="check-container">Admin</label>
      </td>
    </table>

    <label for="psw"><b>Password <span class="psw w3-small" style="color: red">*</span></b></label>
    <input type="password" placeholder="Enter Password" name="psw" required>

    <label for="psw-repeat"><b>Repeat Password <span class="psw-repeat w3-small" style="color: red">*</span></b></label>
    <input type="password" placeholder="Repeat Password" name="psw-repeat" required title="Passwords must match">
    
    <button type="submit" class="signupbtn" onclick="">Sign Up</button>
  </div>
</form>

<script>
  const signup = document.getElementById('signup');

  if (signup) {
    
    const psw_repeat = document.forms["signup"]["psw-repeat"];
    
    psw_repeat.addEventListener('blur', function () {
      if (document.forms["signup"]["psw"].value !== psw_repeat.value) {
        psw_repeat.setCustomValidity('Passwords must match');
        signup.getElementsByClassName("psw-repeat")[0].innerText = "* Passwords must match";
        psw_repeat.style.borderColor = "red";
      }
      else {
        signup.getElementsByClassName("psw-repeat")[0].innerText = "*";
      }
    });

    psw_repeat.addEventListener('focus', function () {
      psw_repeat.setCustomValidity('');
      psw_repeat.style.borderColor = "#ccc";
    });


    signup.addEventListener('submit', function (ev) {
      ev.preventDefault();
      const uname = document.forms["signup"]["uname"],
        email = document.forms["signup"]["email"],
        region = document.forms["signup"]["region"],
        institution = document.forms["signup"]["institution"],
        roles = [],
        psw = document.forms["signup"]["psw"];
        document.forms["signup"].elements["roles[]"].forEach(role => {
          if(role.checked)
            roles.push(role.value);
        });
      
      fetch('/admin/createUser', {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          username: uname.value,
          email: email.value,
          region: region.value,
          institution: institution.value,
          roles: roles,
          password: psw.value,
        })
      })
        .then(data => data.json())
        .then(response => {
          console.error(response.message);
          switch (response.message) {
            case 'Username pattern does not match':
              signup.getElementsByClassName("uname")[0].innerText = "* Username should start with a letter and must be between 5-32 characters";
              uname.style.borderColor = "red";
              break;
            case 'Email pattern does not match':
              signup.getElementsByClassName("email")[0].innerText = "* Not an Email";
              email.style.borderColor = "red";
              break;
            case 'Region not selected':
              signup.getElementsByClassName("region")[0].innerText = "* Select a region";
              region.style.borderColor = "red";
              break;
            case 'Password pattern does not match':
              signup.getElementsByClassName("psw")[0].innerText = "* Password should be made of letters, numbers and must be between 8-32 characters";
              psw.style.borderColor = "red";
              break;
            case 'Failed! Username is already in use!':
              signup.getElementsByClassName("uname")[0].innerText = response.message;
              uname.style.borderColor = "red";
              break;
            case 'Failed! Email is already in use!':
              signup.getElementsByClassName("email")[0].innerText = response.message;
              email.style.borderColor = "red";
              break;
            case 'Created Successfully!': location.pathname = '/admin/users'; break;
            default: alert('An error ocurred. \nPlease try again later.');
          }
        })
        .catch(catchError);
    });
  }
</script>